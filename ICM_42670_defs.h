#ifndef ICM_42670__DEFS_H
#define ICM_42670__DEFS_H

/* C++ header guard */
#ifdef __cplusplus
extern "C" {
#endif

/* Registers addresses */
#define ICM_42670_ACCEL_DATA_REGS 0x0B
#define ICM_42670_GYRO_DATA_REGS 0x11
#define ICM_42670_GYRO_CONFIG0_REG 0x20
#define ICM_42670_ACCEL_CONFIG0_REG 0x21
#define ICM_42670_PWR_MGMT0_REG 0x1F
#define ICM_42670_INT_STATUS_DRDY_REG 0x39

/* Gyro config register (GYRO_CONFIG0) */
#define ICM_42670_GYRO_CFG_RANGE_BITSHIFT 5
#define ICM_42670_GYRO_CFG_FREQ_BITSHIFT 0
#define ICM_42670_GYRO_CFG_RANGE_BITMASK (3 << ICM_42670_GYRO_CFG_RANGE_BITSHIFT)
#define ICM_42670_GYRO_CFG_FREQ_BITMASK (0xF << ICM_42670_GYRO_CFG_FREQ_BITSHIFT)

/* Accelerometer config register (ACCEL_CONFIG0) */
#define ICM_42670_ACCEL_CFG_RANGE_BITSHIFT 5
#define ICM_42670_ACCEL_CFG_FREQ_BITSHIFT 0
#define ICM_42670_ACCEL_CFG_RANGE_BITMASK (3 << ICM_42670_ACCEL_CFG_RANGE_BITSHIFT)
#define ICM_42670_ACCEL_CFG_FREQ_BITMASK (0xF << ICM_42670_ACCEL_CFG_FREQ_BITSHIFT)

/* Power management register (PWR_MGMT0) */
#define ICM_42670_PWR_MGMT_ACCEL_LP_CLK_SEL_BITSHIFT 7
#define ICM_42670_PWR_MGMT_IDLE_BITSHIFT 4
#define ICM_42670_PWR_MGMT_GYRO_MODE_BITSHIFT 2
#define ICM_42670_PWR_MGMT_ACCEL_MODE_BITSHIFT 0

#define ICM_42670_PWR_MGMT_ACCEL_LP_CLK_SEL_BITMASK (1 << ICM_42670_PWR_MGMT_ACCEL_LP_CLK_SEL_BITSHIFT)
#define ICM_42670_PWR_MGMT_IDLE_BITMASK (1 << ICM_42670_PWR_MGMT_IDLE_BITSHIFT)
#define ICM_42670_PWR_MGMT_GYRO_MODE_BITMASK (3 << ICM_42670_PWR_MGMT_GYRO_MODE_BITSHIFT)
#define ICM_42670_PWR_MGMT_ACCEL_MODE_BITMASK (3 << ICM_42670_PWR_MGMT_ACCEL_MODE_BITSHIFT)

/* Interrupt status register (INT_STATUS_DRDY) */
#define ICM_42670_INT_STATUS_DRDY_BITSHIFT 0
#define ICM_42670_INT_STATUS_DRDY_BITMASK (1 << ICM_42670_INT_STATUS_DRDY_BITSHIFT)

typedef enum
{
    ACCEL_RANGE_16_G = 0,
    ACCEL_RANGE_8_G = 1,
    ACCEL_RANGE_4_G = 2,
    ACCEL_RANGE_2_G = 3
} ICM_42670_AccelRange;

typedef enum
{
    GYRO_RANGE_2000_DPS = 0,
    GYRO_RANGE_1000_DPS = 1,
    GYRO_RANGE_500_DPS = 2,
    GYRO_RANGE_250_DPS = 3
} ICM_42670_GyroRange;

typedef enum
{
    ACCEL_FREQ_1600_HZ = 5,
    ACCEL_FREQ_800_HZ = 6,
    ACCEL_FREQ_400_HZ = 7,
    ACCEL_FREQ_200_HZ = 8,
    ACCEL_FREQ_100_HZ = 9,
    ACCEL_FREQ_50_HZ = 10,
    ACCEL_FREQ_25_HZ = 11,
    ACCEL_FREQ_12_5_HZ = 12,
    ACCEL_FREQ_6_25_HZ = 13,
    ACCEL_FREQ_3_125_HZ = 14,
    ACCEL_FREQ_1_5625_HZ = 15,
} ICM_42670_AccelFreq;

typedef enum
{
    GYRO_FREQ_1600_HZ = 5,
    GYRO_FREQ_800_HZ = 6,
    GYRO_FREQ_400_HZ = 7,
    GYRO_FREQ_200_HZ = 8,
    GYRO_FREQ_100_HZ = 9,
    GYRO_FREQ_50_HZ = 10,
    GYRO_FREQ_25_HZ = 11,
    GYRO_FREQ_12_5_HZ = 12,
} ICM_42670_GyroFreq;

typedef enum
{
    GYRO_PWR_MODE_OFF = 0,
    GYRO_PWR_MODE_STDBY = 2,
    GYRO_PWR_MODE_LN =3
} ICM_42670_PwrMgmt_GyroMode;

typedef enum
{
    ACCEL_PWR_MODE_OFF = 0,
    ACCEL_PWR_MODE_OFF1 = 1,
    ACCEL_PWR_MODE_LP = 2,
    ACCEL_PWR_MODE_LN = 3,
} ICM_42670_PwrMgmt_AccelMode;


/* End C++ header guard */
#ifdef __cplusplus
}
#endif

#endif // ICM_4267__DEFS_H
